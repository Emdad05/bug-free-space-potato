"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
if (process.platform === 'win32')
    throw new Error('unsupported platform');
var I = require("./interfaces");
exports.Interfaces = I;
var path = require("path");
exports.native = require(path.join('..', 'build', 'Release', 'termios.node'));
var s = exports.native.ALL_SYMBOLS;
var TermiosHelper = /** @class */ (function (_super) {
    __extends(TermiosHelper, _super);
    function TermiosHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TermiosHelper.prototype.writeTo = function (fd, action) {
        if (typeof action === 'undefined')
            action = s.TCSAFLUSH;
        exports.native.tcsetattr(fd, action, this);
    };
    TermiosHelper.prototype.loadFrom = function (fd) {
        exports.native.tcgetattr(fd, this);
    };
    TermiosHelper.prototype.getInputSpeed = function () {
        return exports.native.cfgetispeed(this);
    };
    TermiosHelper.prototype.getOutputSpeed = function () {
        return exports.native.cfgetospeed(this);
    };
    TermiosHelper.prototype.setInputSpeed = function (baudrate) {
        exports.native.cfsetispeed(this, baudrate);
    };
    TermiosHelper.prototype.setOutputSpeed = function (baudrate) {
        exports.native.cfsetospeed(this, baudrate);
    };
    TermiosHelper.prototype.setSpeed = function (baudrate) {
        exports.native.cfsetispeed(this, baudrate);
        exports.native.cfsetospeed(this, baudrate);
    };
    TermiosHelper.prototype.setraw = function () {
        this.c_iflag &= ~(s.BRKINT | s.ICRNL | s.INPCK | s.ISTRIP | s.IXON);
        this.c_oflag &= ~s.OPOST;
        this.c_cflag &= ~(s.CSIZE | s.PARENB);
        this.c_cflag |= s.CS8;
        this.c_lflag &= ~(s.ECHO | s.ICANON | s.IEXTEN | s.ISIG);
        this.c_cc[s.VMIN] = 1;
        this.c_cc[s.VTIME] = 0;
    };
    TermiosHelper.prototype.setcbreak = function () {
        this.c_lflag &= ~(s.ECHO | s.ICANON);
        this.c_cc[s.VMIN] = 1;
        this.c_cc[s.VTIME] = 0;
    };
    TermiosHelper.prototype.setcooked = function () {
        this.c_iflag = s.BRKINT | s.ICRNL | s.INPCK | s.ISTRIP | s.IXON | s.IGNPAR;
        this.c_oflag = s.OPOST | s.ONLCR;
        this.c_cflag |= s.CS8;
        this.c_lflag = s.ECHOKE | s.ECHOCTL | s.ECHOK | s.ECHOE | s.ECHO | s.ICANON | s.IEXTEN | s.ISIG;
        // FIXME: set c_cc values;
    };
    return TermiosHelper;
}(exports.native.CTermios));
TermiosHelper.prototype.__proto__ = {};
exports.native.CTermios.prototype.__proto__ = TermiosHelper.prototype;
exports.Termios = exports.native.CTermios;
//# sourceMappingURL=index.js.map